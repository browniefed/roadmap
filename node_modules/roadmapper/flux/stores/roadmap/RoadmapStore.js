var Fluxxor = require('fluxxor'),
    _ = require('lodash'),
    RoadmapConstants = require('./RoadmapConstants'),
    Proxy = require('roadmapper/data/Proxy');

var RoadmapStore = Fluxxor.createStore({

    initialize: function() {
        this.bindActions(
            RoadmapConstants.ROADMAP_CREATE_ROADMAP, this.createRoadmap,
            RoadmapConstants.ROADMAP_SAVE_ROADMAP, this.saveRoadmap,
            RoadmapConstants.ROADMAP_DELETE_ROADMAP, this.deleteRoadmap,
            RoadmapConstants.ROADMAP_UPDATE_JAMA_ITEM, this.updateJamaItem,
            RoadmapConstants.ROADMAP_ADD_ITEMS_TO_ROADMAP, this.addItemsToRoadmap,
            RoadmapConstants.ROADMAP_UPDATE_ROADMAP_ITEM, this.updateRoadmapItem
        )
    },

    addItemsToRoadmap: function(payload) {
        var roadmap = Proxy.getRoadmap(payload.roadmapId);
        roadmap.items = roadmap.items || [];
        roadmap.items = roadmap.items.concat(payload.items || []);
        roadmap.items = _.uniq(roadmap.items, function(item) {
            return item.id;
        });

        roadmap.itemTypes = payload.itemTypes.fields;

        roadmap.progressFields = _.filter(roadmap.itemTypes, function(itemType) {
            return itemType.fieldType == 'ROLLUP';
        });

        roadmap.groupableFields = payload.groupableFields;
        roadmap.pickListOptions = payload.pickListOptions;
        roadmap.releases = payload.releases;

        Proxy.saveRoadmap(payload.roadmapId, roadmap);
        this.emit('change');

    },
    updateRoadmapItem: function(payload) {
        _.each(payload, function(jamaItem) {
            var roadmap = Proxy.getRoadmap(jamaItem.roadmapId);

            roadmap.items = roadmap.items || [];
            var item = _.find(roadmap.items, function(roadmapItem) {
                return jamaItem.item.id == roadmapItem.id;
            });

            if (item) {
                _.extend(item, jamaItem.item);
            }
            Proxy.saveRoadmap(jamaItem.roadmapId, roadmap);
        })
        this.emit('change');
    },
    createRoadmap: function() {
        
        this.emit('change');
    },
    saveRoadmap: function() {

    },
    deleteRoadmap: function(payload) {

        this.emit('change');
    },
    updateJamaItem: function(payload) {
        var roadmap = Proxy.getRoadmap(payload.roadmapId);

        roadmap.items = roadmap.items || [];
        var item = _.find(roadmap.items, function(item) {
            return item.id == payload.id
        });

        if (item) {
            item.fields = _.extend({}, item.fields, payload.item.fields);
        }

        Proxy.saveRoadmap(payload.roadmapId, roadmap);

    },
    getRoadmap: function(roadmapId) {
        return Proxy.getRoadmap(roadmapId);
    },
    getRoadmaps: function() {
        return Proxy.getRoadmaps();
    }
});

module.exports = RoadmapStore;