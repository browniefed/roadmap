var Fluxxor = require('fluxxor'),
    JamaTreeConstants = require('./JamaTreeConstants'),
    _ = require('lodash'),
    nest = require('roadmapper/nest');


var JamaTreeStore = Fluxxor.createStore({

    initialize: function() {
        this.bindActions(
            JamaTreeConstants.LOAD_PROJECT_FROM_ID_COMPLETE, this.loadProjectComplete,
            JamaTreeConstants.LOAD_CHILDREN_FROM_PARENT_ID, this.loadChildItemsComplete
        );

        this.data = {
            projects: {},
            items: {}
        };
    },
    loadProjectComplete: function(payload) {
        this.data.projects[payload.id] = payload;

        this.emit('change');
    },
    loadChildItemsComplete: function(payload) {
        this.data.items[payload.projectId] = this.data.items[payload.projectId] || [];
        var items = _.map(payload.items, function(item) {
            item.parentId = payload.parent;
            return item;
        });

        this.data.items[payload.projectId] = _.uniq(this.data.items[payload.projectId].concat(items), function(item) {
            return item.id
        });
        this.emit('change');
    },

    getProject: function(projectId) {
        return this.data.projects[projectId];
    },
    getItems: function(projectId) {
        var items = (this.data.items[projectId] || []).slice(),
            nestedItems = [];

            if (_.isEmpty(items)) {
                return [];
            }

            nestedItems = nest(items, 'parentId', 'id');
            return nestedItems;

    }
});

module.exports = JamaTreeStore;