var _ = require('lodash');

function nest(item, items, compareParentKey, compareChildKey) {

    var childrenItems = [];
    _.each(items, function(childItem) {
        if (childItem[compareParentKey] == item[compareChildKey]) {
            childrenItems.push(childItem);
        }
    });

    if (!_.isEmpty(childrenItems)) {
        childrenItems = _.map(childrenItems, function(childItem) {
            return nest(childItem, items, compareParentKey, compareChildKey);
        }); 
    }

    return _.assign(item, {children: childrenItems});
}

var nester = function nester(items, compareParent, compareChild) {
    var rootItems = _.reject(items, function(item) {
        return !!item.parentId;
    });

    var nestedItems = _.map(rootItems, function(rootItem) {
        return nest(rootItem, items, 'parentId', 'id');
    })

    return nestedItems;
}

module.exports = nester;
