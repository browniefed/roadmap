var React = require('react'),
    _ = require('lodash');


var Tree = React.createClass({
  getInitialState: function() {
    return {
      visible: true
    };
  },
  getDefualtProps: function() {
    return {
        onClick: function() {}
    }
  },
  render: function() {
    var children;
    var className = "";
    if (!_.isEmpty(this.props.node.children)) {
      children = this.props.node.children.map(function(node, index) {
        return <li key={index}><Tree node={node} onClick={this.props.onClick} /></li>
      }, this);

      className = "togglable";
      if (this.state.visible) {
        className += " togglable-down";
      } else {
        className += " togglable-up";
      }
    }

    var style = {};
    if (!this.state.visible) {
      style.display = "none";
    }
    if (this.state.selected) {
        className += ' tree-item-selected';
    }

    return (
      <div>
        <h5 onClick={_.bind(this.toggle, this, this.props.node)} className={className}>
          {this.props.node.title || this.props.node.fields && this.props.node.fields.name}
        </h5>
        <ul style={style}>
          {children}
        </ul>
      </div>
    );
  },
  toggle: function(node, e) {
    this.props.onClick(node, !this.state.selected);

    this.setState({visible: !this.state.visible, selected: !this.state.selected });
  }
});

module.exports = Tree;