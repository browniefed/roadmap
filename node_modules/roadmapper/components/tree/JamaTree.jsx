var React = require('react'),
    Tree = require('./Tree'),
    Flux = require('roadmapper/flux/Flux'),
    Fluxxor = require('fluxxor'),
    StoreWatchMixin = Fluxxor.StoreWatchMixin,
    FluxMixin = Fluxxor.FluxMixin(React);


var JamaTree = React.createClass({
    mixins: [
        FluxMixin,
        StoreWatchMixin('JamaTreeStore')
    ],
    propTypes: {
        projectId: React.PropTypes.number.isRequired,
        items: React.PropTypes.object
    },
    getDefaultProps: function() {
        return {
            onClick: function() {}
        }
    },
    getStateFromFlux: function() {
        return {
            project: this.getFlux().store('JamaTreeStore').getProject(this.props.projectId),
            items: this.getFlux().store('JamaTreeStore').getItems(this.props.projectId)
        };
    },
    componentDidMount: function() {
        this.loadProject();
        this.loadRootChildren();
    },
    componentDidUpdate: function() {
    },
    loadProject: function() {
        this.getFlux().actions.JamaTreeActions.loadProject({
            projectId: this.props.projectId
        });
    },
    loadRootChildren: function() {
        this.getFlux().actions.JamaTreeActions.loadRootChildren({
            projectId: this.props.projectId
        });
    },
    getTreeNodes: function() {
        if (!this.state.project || !this.state.items) {
            return null;
        }
        return {
          title: this.state.project.fields.name,
          children: this.state.items
        };

    },
    handleClick: function(node, selected) {
        this.props.onClick(node, selected);
        this.getFlux().actions.JamaTreeActions.loadChildrenOfItem({
            projectId: this.props.projectId,
            itemId: node.id
        })
    },
    getTree: function() {
        if (!this.state.project || !this.state.items) {
            return null;
        }
        return (
            <div className="jama-tree">
                <Tree 
                    onClick={this.handleClick}
                    node={this.getTreeNodes()}/>
            </div>
        )
    },
    render: function() {
        return this.getTree();
    }
});

module.exports = JamaTree;